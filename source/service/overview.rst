.. _service_overview:

========
Overview
========

.. _one_service_appliance:

ONE service appliance
---------------------

Our ONE service appliances extend the OpenNebula's marketplace with simple-to-use deployable services. They are not just images with preinstalled packages, but ONE appliance will run a provisioned service via contextualization parameters.

On top of it passwords, credentials and similar are not baked into the image, but they are autogenerated and setup a new with each deployment (instantiations) to add more security. Of course the user can provide these values through contextualization where it is desirable, but at the same time no one needs to micromanage every piece of vulnerable information. And it is safe because there is still this nice feature that no two instances of ONE service appliance will share passwords, database credentials etc.

Each of these ONE service appliance images comes with our service script which does the heavy lifting of bringing the service up and running.

.. _one_service_script:

ONE service script
------------------

You will find the following script inside every ONE service appliance::

    /etc/one-appliance/service

There are actually three stages in the life of a ONE service appliance:

* **install** (build time)
* **configure** (instantiaton time)
* **bootstrap** (instantiaton time)

Each of these stages is the argument to the ``/etc/one-appliance/service`` which then executes them.

If you wish to find out more about this script and about the important contextualization variables (per appliance) then run it with the argument ``help``::

    $ /etc/one-appliance/service help

.. _one_service_stage_install:

Install
~~~~~~~

This stage is already done when you download an appliance from the marketplace. It runs during the appliance's image build.

Basically it's responsibility is to setup package repositories, install required packages and download anything an appliance will need for the proper start of a service.

.. _one_service_stage_configure:

Configure
~~~~~~~~~

This is the crucial stage and one which will be run on every instantiation. Also for this step to be successful the user can provide contextualization parameters which will drive the configuration process in a direction the user wants.

Some appliances will not require any variables to be set (all variables will have working default values), some appliances may require a few variables which would be mandatory.

At the end of this stage the service is actually provisioned and running - but of course only if all mandatory contextualization variables have been provided and all used contextualization variables have been set with valid values.

.. _one_service_stage_bootstrap:

Bootstrap
~~~~~~~~~

We call the last stage bootstrap and it kind of overlaps with the previous configuration stage. Similarly to the configure stage here are also recognized some contextualization parameters. We intended this stage as an opportunity to streamline the appliance start up to a full service by bootstrapping some necessary manual steps. To understand better what we mean here, imagine the service where upon your first use you are forced to create some user first. The bootstrap stage can do this for you if you provide relevant contextualization variables.

Another responsibility of this stage is to report ``READY=yes`` to the OneGate, but only when the service is ready and properly working. The time needed to do so depends on the type of an appliance. Some appliances can configure and bootstrap very quickly, but others can take more time - usually in a matter of minutes (this also will depend on a power of your virtual machines).

.. _one_service_logs:

ONE service report and logs
---------------------------

After the successful configure & bootstrap stage you will find many relevant information like credentials and connection settings in this file::

    /etc/one-appliance/config

On the other hand if things went badly amiss and your appliance did not configured or bootstrapped itself properly then you may go through it's logs::

    /var/log/one-appliance/ONE_install.log
    /var/log/one-appliance/ONE_configure.log
    /var/log/one-appliance/ONE_bootstrap.log

For obvious reasons you will be most often interested in ``ONE_configure.log`` and ``ONE_bootstrap.log``.